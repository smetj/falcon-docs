# coding=UTF-8
from __future__ import print_function, absolute_import, division
import six
import logging
from .method import resource_to_body
import re

logger = logging.getLogger(__name__)


def wrap(content, title=u"Documentation"):
    return b"".join(
        s.encode("utf8")
        for s in [
            u"""<!doctype HTML>
    <html lang="en">
    <head>
        <title>Documentation for %s</title>
        <meta charset="UTF-8">
    </head>
    <body>"""
            % (title,)
        ]
        + content
        + [u'<hr><p style="font-size: small">Generated by falcondocs</p></body></html>']
    )


def process(resources, docres, blacklist=[]):
    out = [u'<h1>Table of contents</h1><p style="margin-bottom: 30px;">']

    resources2 = []
    for res in resources.get_resources():
        if res is not docres and not __isBlackListed(res, blacklist):
            resources2.append(res)

    for res in resources2:
        out.extend([u'<a href="#r%s">%s</a><br>' % (res.id, res.main_name)])

    out.extend([u"</p><hr>"])

    for res in resources2:
        out.extend(resource_to_body(res))

    return out


def __isBlackListed(item, blacklist):

    for entry in blacklist:
        if re.match(entry, item.main_name):
            return True
    else:
        return False
